# :) 

set $mod Mod4
set $left h
set $down j
set $up k
set $right l

# Kitty as terminal (mod+enter)
# https://sw.kovidgoyal.net/kitty/
set $term /usr/bin/kitty
set $term_cwd $term --working-directory "$(swaycwd 2>/dev/null || echo $HOME)"
bindsym $mod+Return exec $term

# Launcher sway-launcher-desktop (mod+d)
# https://github.com/Biont/sway-launcher-desktop
for_window [app_id="^launcher$"] floating enable, sticky enable, resize set 30 ppt 60 ppt, border pixel 1
set $menu exec $term --class=launcher -e env TERMINAL_COMMAND='$term -e' /home/tikhon/src/sway-launcher-desktop/sway-launcher-desktop.sh
bindsym --to-code {
    $mod+d exec $menu
    Ctrl+Space exec $menu
}

# grim for screenshots
bindsym --to-code {
    
    # capture the specified screen area to clipboard    
    $mod+shift+s exec grim -g "$(slurp -d)" - | wl-copy

    # capture the focused monitor to clipboard    
    $mod+shift+d exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') - | wl-copy
}

# Open BASIC GUI apps shortcuts
bindsym --to-code {
    $mod+i exec $XDG_CONFIG_HOME/local/chromium.sh
    $mod+shift+f exec foot # safety option if kitty is not working
    $mod+shift+t exec telegram-desktop
    $mod+m exec $term hifi-rs open
}

# Wob indicator
# https://github.com/francma/wob
set $SWAYSOCK.wob $XDG_RUNTIME_DIR/wob.sock
exec rm -f $SWAYSOCK.wob && mkfifo $SWAYSOCK.wob && tail -f $SWAYSOCK.wob | wob

# Volume controls
bindsym --locked {
    XF86AudioMute exec amixer set Master toggle | sed -En '/\[on\]/ s/.*\[([0-9]+)%\].*/\1/ p; /\[off\]/ s/.*/0/p' > $SWAYSOCK.wob
    XF86AudioRaiseVolume exec amixer set Master 5%+ | sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $SWAYSOCK.wob 
    XF86AudioLowerVolume exec amixer set Master 5%- | sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $SWAYSOCK.wob
}
# Brightness controls
bindsym {
    XF86MonBrightnessUp exec brightnessctl set 5%+ | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $SWAYSOCK.wob
    XF86MonBrightnessDown exec brightnessctl set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $SWAYSOCK.wob
    Shift+XF86MonBrightnessUp exec brightnessctl --device=kbd_backlight set 5%+ | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $SWAYSOCK.wob
    Shift+XF86MonBrightnessDown exec brightnessctl --device=kbd_backlight set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $SWAYSOCK.wob
}
# Player controls
bindsym {
    XF86AudioPlay exec playerctl play-pause
    XF86AudioNext exec playerctl next
    XF86AudioPrev exec playerctl previous
}
bindsym XF86Search exec $menu
bindsym XF86PowerOff exec loginctl lock-session

# toggle wifi
bindsym --to-code $mod+Ctrl+w exec [ "$(nmcli radio wifi)" = "enabled" ] && nmcli radio wifi off || nmcli radio wifi on
# toggle internal monitor
bindsym --to-code $mod+Shift+m exec swaymsg output "eDP-1" toggle

# MacOS-like keybindings
# You need to have 'wtype' installed 
# https://github.com/atx/wtype
bindsym --to-code {
    $mod+z exec wtype -M ctrl -P z
    $mod+a exec wtype -M ctrl -P a
    $mod+s exec wtype -M ctrl -P s
    $mod+f exec wtype -M ctrl -P f
    $mod+x exec wtype -M shift -P delete
    $mod+c exec wtype -M ctrl -P insert
    $mod+v exec wtype -M ctrl -M shift -P v
    $mod+p exec wtype -M ctrl -P p
    $mod+t exec wtype -M ctrl -P t
    $mod+w exec wtype -M ctrl -P w
    $mod+r exec wtype -M ctrl -P r
    $mod+y exec wtype -M ctrl -P h
    $mod+l exec wtype -M ctrl -P l
    Ctrl+p exec wtype -P Up
    Ctrl+n exec wtype -P Down
}

# Idle configuration (swaylock)
# https://github.com/swaywm/swaylock
# https://gitlab.com/fedora/sigs/sway/sway-config-fedora/-/blob/fedora/sway/config.d/90-swayidle.conf
set $locker $HOME/.config/sway/swaylock.sh
set $lock_timeout 300
set $screen_timeout 250
exec LT="$lock_timeout" ST="$screen_timeout" LT=${LT:-300} ST=${ST:-60} && \
    swayidle -w \
        timeout $LT $locker \
        timeout $((LT + ST)) 'swaymsg "output * power off"' \
                      resume 'swaymsg "output * power on"'  \
        timeout $ST 'pgrep -xu "$USER" swaylock >/dev/null && swaymsg "output * power off"' \
             resume 'pgrep -xu "$USER" swaylock >/dev/null && swaymsg "output * power on"'  \
        before-sleep $locker \
        lock $locker \
        unlock 'pkill -xu "$USER" -SIGUSR1 swaylock'
bindsym --to-code $mod+Shift+l exec loginctl lock-session

### Output configuration
output * bg #000000 solid_color

### Input configuration
input "1452:850:Apple_MTP_multi-touch" {
    dwt enabled        # Disable while typing
    scroll_factor 0.2  # Perfect!
}
input "1452:850:Apple_MTP_keyboard" {
    xkb_model applealu_ansi
    xkb_variant mac
}
input type:keyboard {
    xkb_layout us,ru
    repeat_rate 45
    repeat_delay 400
    xkb_options caps:escape,grp:win_space_toggle,grp_led:caps
}

# Drag floating windows by holding down $mod and left mouse button.
floating_modifier $mod normal

# Basic Key bindings
bindsym --to-code {
    $mod+q kill
    $mod+Shift+c reload 
}

# Exit sway (logs you out of your Wayland session)
bindsym --to-code $mod+Shift+e exec swaynag -t \
    warning -m 'Do you really want to exit sway? This will end your Wayland session.' \
    -B 'Yes, exit sway' 'swaymsg exit'

# Moving around:
mode "move" {
    # Move your focus around
    bindsym --to-code $left focus left; mode "default"
    bindsym --to-code $down focus down; mode "default"
    bindsym --to-code $up focus up; mode "default"
    bindsym --to-code $right focus right; mode "default"

    # Move the focused window with the same, but add Shift
    bindsym --to-code Shift+$left move left; mode "default"
    bindsym --to-code Shift+$down move down; mode "default"
    bindsym --to-code Shift+$up move up; mode "default"
    bindsym --to-code Shift+$right move right; mode "default"

    # Return to default mode
    bindsym Escape mode "default"
}
# enter move mode
# like ctrl+b (or ctrl+a in my case) in tmux 
bindsym --to-code $mod+Shift+w mode "move" 

# Switch to workspace
bindsym {
    $mod+1 workspace number 1
    $mod+2 workspace number 2
    $mod+3 workspace number 3
    $mod+4 workspace number 4
    $mod+5 workspace number 5
    $mod+6 workspace number 6
    $mod+7 workspace number 7
    $mod+8 workspace number 8
    $mod+9 workspace number 9
    $mod+0 workspace number 10
}
# Move focused container to workspace
bindsym {
    $mod+Shift+1 move container to workspace number 1
    $mod+Shift+2 move container to workspace number 2
    $mod+Shift+3 move container to workspace number 3
    $mod+Shift+4 move container to workspace number 4
    $mod+Shift+5 move container to workspace number 5
    $mod+Shift+6 move container to workspace number 6
    $mod+Shift+7 move container to workspace number 7
    $mod+Shift+8 move container to workspace number 8
    $mod+Shift+9 move container to workspace number 9
    $mod+Shift+0 move container to workspace number 10
}

# Make the current focus fullscreen
# like in macos
bindsym $mod+Ctrl+f fullscreen
# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Resizing containers:
mode "resize" {
    bindsym --to-code $left resize shrink width 10px
    bindsym --to-code $down resize grow height 10px
    bindsym --to-code $up resize shrink height 10px
    bindsym --to-code $right resize grow width 10px

    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym --to-code $mod+shift+r mode "resize"


# DESIGN just hide fucking everything
default_border none
default_floating_border none

set $clear #ffffff00
# class                  border   background  text     indicator  child_border
client.focused_inactive  #333333  #5f676a     #ffffff  #484e50    $clear
client.unfocused         #333333  #222222     #888888  #292d2e    $clear

# Status Bar:
bar {
    position top
    font pango:Menlo Regular 11

    status_command while $HOME/.config/sway/status.sh; do sleep 1; done

    colors {
        statusline #ffffff
        background #000000
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

for_window [title="Picture in picture"] \
    floating enable, move position 877 450, sticky enable
for_window [class="Chromium-browser"] mark Browser
for_window [con_mark="Browser"] {
    inhibit_idle fullscreen
}

# Notifications using mako
# https://github.com/emersion/mako
exec mako
bindsym --to-code $mod+h exec makoctl dismiss -a

# Rescrobbled service 
exec systemctl --user restart rescrobbled.service

# Fix xdg-desktop-portal-wlr
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway; \
    systemctl --user stop pipewire wireplumber xdg-desktop-portal xdg-desktop-portal-wlr; \
    systemctl --user start wireplumber

include @sysconfdir@/sway/config.d/*
